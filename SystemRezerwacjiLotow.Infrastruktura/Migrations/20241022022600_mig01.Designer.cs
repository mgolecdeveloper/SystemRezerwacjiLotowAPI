// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemRezerwacjiLotow.Infrastruktura;

#nullable disable

namespace SystemRezerwacjiLotow.Infrastruktura.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241022022600_mig01")]
    partial class mig01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.DzienWylotu", b =>
                {
                    b.Property<string>("DzieWylotuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dzien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DzieWylotuId");

                    b.HasIndex("FlightId");

                    b.ToTable("DniWylotow");

                    b.HasData(
                        new
                        {
                            DzieWylotuId = "42c4b0d1-e711-4c7b-8360-751a24a46575",
                            Dzien = "Sobota",
                            FlightId = "KLM 49708 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "eb9b5bfc-1fda-4c09-b545-d99071feb520",
                            Dzien = "Środa",
                            FlightId = "KLM 49708 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "cee15194-799d-48e7-8524-8021991fc6d4",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 96196 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "a9e2d8bd-7c02-4d15-9ebc-1d67828731ff",
                            Dzien = "Piątek",
                            FlightId = "KLM 96196 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "baeff050-87e2-4020-812f-f3cab5cd545c",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 38120 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "c320a3bb-9999-4585-823f-ba08f725d7a2",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 38120 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "91a194d8-2d46-4e25-a496-81678009f92f",
                            Dzien = "Czwartek",
                            FlightId = "KLM 25281 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "ea5af771-9d57-47d7-a260-9d9172406824",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 25281 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "5249062b-13b0-4e46-87b7-3be45d622261",
                            Dzien = "Piątek",
                            FlightId = "KLM 35165 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "12aa4e4d-1e67-4ee5-a4b5-e44693d4a483",
                            Dzien = "Piątek",
                            FlightId = "KLM 35165 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "aca57ddc-adb5-4a4b-b52f-82840ae301b2",
                            Dzien = "Sobota",
                            FlightId = "KLM 19500 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "d5a11206-112a-4a25-8474-d52eb9c49711",
                            Dzien = "Wtorek",
                            FlightId = "KLM 19500 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "387e979a-150c-4622-a933-e3f1e24d092d",
                            Dzien = "Czwartek",
                            FlightId = "KLM 10018 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "5845395b-5769-49ea-a3ed-0ccb3cb2b718",
                            Dzien = "Sobota",
                            FlightId = "KLM 10018 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "ee2662a0-d568-4b1c-8ea3-00c62abbabbb",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 82346 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "374ec421-5dbd-43f7-ab49-c2d3e30e0981",
                            Dzien = "Wtorek",
                            FlightId = "KLM 82346 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "e89711bc-ac08-4131-ba5f-1ee3d4e72230",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 61459 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "080d13cf-d475-4160-b0ab-3b26f3711ad9",
                            Dzien = "Piątek",
                            FlightId = "KLM 61459 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "96a5aff8-27fa-41c2-9bb8-7c011bf2e5db",
                            Dzien = "Piątek",
                            FlightId = "KLM 48610 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "5af8e11c-b40c-422e-90d4-75d7b1bae117",
                            Dzien = "Środa",
                            FlightId = "KLM 48610 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "cb60f0f7-8010-4f06-bf78-8c2152726310",
                            Dzien = "Środa",
                            FlightId = "KLM 48056 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "65abd746-1754-46ba-9f2e-1bb1a182cf31",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 48056 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "d36241a7-d573-40fd-b658-f7af380cdd69",
                            Dzien = "Czwartek",
                            FlightId = "KLM 46927 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3725d787-dbd0-491a-b7ea-8a1122ec26d6",
                            Dzien = "Czwartek",
                            FlightId = "KLM 46927 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "02ff9820-9e40-4f97-bd23-2327b103ed7a",
                            Dzien = "Wtorek",
                            FlightId = "KLM 88139 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "e4bb26ce-cebb-4564-b42a-4e6e090cae33",
                            Dzien = "Sobota",
                            FlightId = "KLM 88139 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "1a36b2ce-359f-41bd-b99a-0921c348534e",
                            Dzien = "Środa",
                            FlightId = "KLM 52799 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "63cf9a82-e728-4245-9af4-8a51bbc36b29",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 52799 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "01636c0c-256c-45c0-8f71-23f1d05bf365",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 98909 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "3b8a53fa-a65e-493b-b0d8-a1fd96250b82",
                            Dzien = "Wtorek",
                            FlightId = "KLM 98909 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "fedb4394-74b1-4f17-9c64-dcd10fba5510",
                            Dzien = "Środa",
                            FlightId = "KLM 10732 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "cdb652c5-63ad-43a6-99ea-9414b32f71c2",
                            Dzien = "Środa",
                            FlightId = "KLM 10732 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "33132add-a023-4511-9c64-bf8aad3eb6e5",
                            Dzien = "Czwartek",
                            FlightId = "KLM 60776 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "be53a751-3bfa-4636-ae11-4cdc7a2025fb",
                            Dzien = "Czwartek",
                            FlightId = "KLM 60776 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "b7b61857-ceb6-46ba-ac9d-24c3132a011f",
                            Dzien = "Piątek",
                            FlightId = "KLM 28509 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "faacff0a-baa8-45d9-bea8-7d8040b382c2",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 28509 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "10dba906-eba0-49c2-9254-243a7c88b7f5",
                            Dzien = "Sobota",
                            FlightId = "KLM 73425 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "2c745425-1500-4b52-8d60-c877ebb52a78",
                            Dzien = "Środa",
                            FlightId = "KLM 73425 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "86221cba-bff5-4e60-93c3-0b6afb44fff6",
                            Dzien = "Środa",
                            FlightId = "KLM 15602 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "17c39ca8-fe21-4996-8a9c-a949c0bb7ef9",
                            Dzien = "Środa",
                            FlightId = "KLM 15602 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "198c7afa-719b-4f3b-9537-fd15b5e1fc57",
                            Dzien = "Środa",
                            FlightId = "KLM 32558 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "2dc6ed16-b1ac-4536-a832-fd93a839d2bf",
                            Dzien = "Środa",
                            FlightId = "KLM 32558 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "d4e456a8-babc-46e5-b22e-c6549d38cd17",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 20804 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "c0481e83-0854-460c-ab9c-1e614d434721",
                            Dzien = "Czwartek",
                            FlightId = "KLM 20804 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "7dc05fc0-1a08-4194-909e-7d90d9716acd",
                            Dzien = "Czwartek",
                            FlightId = "KLM 38542 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "f6e224a3-0a61-493a-bf71-85c4227569ce",
                            Dzien = "Poniedziałek",
                            FlightId = "KLM 38542 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "62e6fc2d-b500-4fba-8000-ca3c048da91b",
                            Dzien = "Środa",
                            FlightId = "KLM 60967 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "785c0718-16d5-447c-9322-541d2c3417bb",
                            Dzien = "Wtorek",
                            FlightId = "KLM 60967 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "0437512d-95e8-4ab4-a33d-9a5311f592f8",
                            Dzien = "Sobota",
                            FlightId = "KLM 37147 BCA"
                        },
                        new
                        {
                            DzieWylotuId = "084b1839-2f30-465b-9c6b-5e9d4f634c03",
                            Dzien = "Piątek",
                            FlightId = "KLM 37147 BCA"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataDodania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GodzinaWylotu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrasaDo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrasaOd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightId");

                    b.HasIndex("TenantId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = "KLM 49708 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "8:54",
                            Price = 177.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 96196 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "20:55",
                            Price = 140.0,
                            TenantId = "67965e5f-8df1-4711-93a6-fb6d1dbdf7de",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 38120 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "8:51",
                            Price = 113.0,
                            TenantId = "7c985a76-a1f6-426c-8f11-d6cc989aa9ce",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 25281 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "21:7",
                            Price = 126.0,
                            TenantId = "2cb6fc90-12a2-49b1-aeee-712161095eea",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 35165 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "9:31",
                            Price = 181.0,
                            TenantId = "7c985a76-a1f6-426c-8f11-d6cc989aa9ce",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 19500 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "16:53",
                            Price = 190.0,
                            TenantId = "fb933f31-9716-4d3f-a6e4-15206253145e",
                            TrasaDo = "USA",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 10018 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "2:56",
                            Price = 134.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd",
                            TrasaDo = "Afryka",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 82346 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "3:43",
                            Price = 107.0,
                            TenantId = "eddf7e57-6773-4cc4-888c-fff20f782fcb",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 61459 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "9:27",
                            Price = 140.0,
                            TenantId = "98258545-9700-4ee8-83e3-f020f586bac0",
                            TrasaDo = "Afryka",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 48610 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "8:29",
                            Price = 138.0,
                            TenantId = "eddf7e57-6773-4cc4-888c-fff20f782fcb",
                            TrasaDo = "Londyn",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 48056 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "12:9",
                            Price = 112.0,
                            TenantId = "726206e3-e379-4f35-b454-4c78b9ab0450",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 46927 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "20:53",
                            Price = 139.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd",
                            TrasaDo = "USA",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 88139 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "1:21",
                            Price = 165.0,
                            TenantId = "eddf7e57-6773-4cc4-888c-fff20f782fcb",
                            TrasaDo = "USA",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 52799 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "11:50",
                            Price = 167.0,
                            TenantId = "c59a8c3b-f99f-4e57-a166-7a953a02b62f",
                            TrasaDo = "USA",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 98909 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "19:51",
                            Price = 127.0,
                            TenantId = "7c985a76-a1f6-426c-8f11-d6cc989aa9ce",
                            TrasaDo = "Londyn",
                            TrasaOd = "Hiszpania"
                        },
                        new
                        {
                            FlightId = "KLM 10732 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "8:55",
                            Price = 172.0,
                            TenantId = "eddf7e57-6773-4cc4-888c-fff20f782fcb",
                            TrasaDo = "USA",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 60776 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "11:33",
                            Price = 103.0,
                            TenantId = "c59a8c3b-f99f-4e57-a166-7a953a02b62f",
                            TrasaDo = "Afryka",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 28509 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "8:25",
                            Price = 135.0,
                            TenantId = "67965e5f-8df1-4711-93a6-fb6d1dbdf7de",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 73425 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "13:16",
                            Price = 145.0,
                            TenantId = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 15602 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "3:25",
                            Price = 154.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd",
                            TrasaDo = "Afryka",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 32558 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "6:34",
                            Price = 136.0,
                            TenantId = "67965e5f-8df1-4711-93a6-fb6d1dbdf7de",
                            TrasaDo = "Londyn",
                            TrasaOd = "Horwacja"
                        },
                        new
                        {
                            FlightId = "KLM 20804 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "6:20",
                            Price = 134.0,
                            TenantId = "2cb6fc90-12a2-49b1-aeee-712161095eea",
                            TrasaDo = "Afryka",
                            TrasaOd = "Rosja"
                        },
                        new
                        {
                            FlightId = "KLM 38542 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "14:22",
                            Price = 171.0,
                            TenantId = "c59a8c3b-f99f-4e57-a166-7a953a02b62f",
                            TrasaDo = "USA",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 60967 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "18:50",
                            Price = 107.0,
                            TenantId = "98258545-9700-4ee8-83e3-f020f586bac0",
                            TrasaDo = "Londyn",
                            TrasaOd = "Chiny"
                        },
                        new
                        {
                            FlightId = "KLM 37147 BCA",
                            DataDodania = "22.10.2024 04:26:00",
                            GodzinaWylotu = "21:45",
                            Price = 158.0,
                            TenantId = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75",
                            TrasaDo = "Londyn",
                            TrasaOd = "Hiszpania"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataZakupu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IloscBiletow")
                        .HasColumnType("int");

                    b.Property<double>("PriceSuma")
                        .HasColumnType("float");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FlightBuyId");

                    b.HasIndex("FlightId");

                    b.HasIndex("TenantId");

                    b.ToTable("FlightBuys");

                    b.HasData(
                        new
                        {
                            FlightBuyId = "02c1cb30-b262-4afa-baf6-35a4fe7bd6bc",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 60776 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75"
                        },
                        new
                        {
                            FlightBuyId = "c9c33b7a-b46e-43e1-9e4e-06af6602d5a9",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 10732 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75"
                        },
                        new
                        {
                            FlightBuyId = "294338d5-6950-4dcf-b3ab-b01f23f93cb0",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 20804 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "726206e3-e379-4f35-b454-4c78b9ab0450"
                        },
                        new
                        {
                            FlightBuyId = "c621ad8a-1299-4475-b603-641fc6376190",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 10018 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "7c985a76-a1f6-426c-8f11-d6cc989aa9ce"
                        },
                        new
                        {
                            FlightBuyId = "fab8a91e-ef3d-488a-a3ca-81e7392f1d17",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 10732 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "726206e3-e379-4f35-b454-4c78b9ab0450"
                        },
                        new
                        {
                            FlightBuyId = "0e969e68-fbe0-450e-969c-352b73324ae9",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 88139 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "eddf7e57-6773-4cc4-888c-fff20f782fcb"
                        },
                        new
                        {
                            FlightBuyId = "e9388170-0835-434c-bb52-b52e721a0dcd",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 25281 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd"
                        },
                        new
                        {
                            FlightBuyId = "61cbad08-d1d6-4b68-9f75-4e07c910d2be",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 28509 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "2cb6fc90-12a2-49b1-aeee-712161095eea"
                        },
                        new
                        {
                            FlightBuyId = "db81ee59-94cd-4f34-81a2-44101ffa4bb4",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 38542 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "6f9980e0-3645-4965-a237-8c9b5e3824bd"
                        },
                        new
                        {
                            FlightBuyId = "5bdd3748-7506-4f76-bf49-d740e9b3dde7",
                            DataZakupu = "22.10.2024 04:26:00",
                            FlightId = "KLM 98909 BCA",
                            IloscBiletow = 1,
                            PriceSuma = 125.0,
                            TenantId = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuyKryteriaZnizki", b =>
                {
                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KryteriaZnizkiId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FlightBuyId", "KryteriaZnizkiId");

                    b.HasIndex("KryteriaZnizkiId");

                    b.ToTable("FlightBuysKryteriaZnizkis");

                    b.HasData(
                        new
                        {
                            FlightBuyId = "02c1cb30-b262-4afa-baf6-35a4fe7bd6bc",
                            KryteriaZnizkiId = "2ee2e556-254e-4bc6-b546-0b0a74e07120"
                        },
                        new
                        {
                            FlightBuyId = "294338d5-6950-4dcf-b3ab-b01f23f93cb0",
                            KryteriaZnizkiId = "2ee2e556-254e-4bc6-b546-0b0a74e07120"
                        },
                        new
                        {
                            FlightBuyId = "fab8a91e-ef3d-488a-a3ca-81e7392f1d17",
                            KryteriaZnizkiId = "497258eb-6f6b-4df0-b544-3e7814be9699"
                        },
                        new
                        {
                            FlightBuyId = "e9388170-0835-434c-bb52-b52e721a0dcd",
                            KryteriaZnizkiId = "2ee2e556-254e-4bc6-b546-0b0a74e07120"
                        },
                        new
                        {
                            FlightBuyId = "db81ee59-94cd-4f34-81a2-44101ffa4bb4",
                            KryteriaZnizkiId = "2ee2e556-254e-4bc6-b546-0b0a74e07120"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.Property<string>("KryteriaZnizkiId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FlightBuyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KryteriaZnizkiId");

                    b.HasIndex("FlightBuyId");

                    b.ToTable("KryteriaZnizek");

                    b.HasData(
                        new
                        {
                            KryteriaZnizkiId = "2ee2e556-254e-4bc6-b546-0b0a74e07120",
                            Name = "Urodziny kupującego"
                        },
                        new
                        {
                            KryteriaZnizkiId = "497258eb-6f6b-4df0-b544-3e7814be9699",
                            Name = "Lot do Afryki"
                        });
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataUrodzenia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantKind")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dce115bb-e8fc-42eb-8f17-896ee7ebdff6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2047a458-a48b-4693-bb82-26cbae45b675",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "admin@admin.pl",
                            EmailConfirmed = true,
                            Imie = "Jan",
                            LockoutEnabled = false,
                            Nazwisko = "Kowalski",
                            NormalizedEmail = "ADMIN@ADMIN.PL",
                            NormalizedUserName = "ADMIN@ADMIN.PL",
                            PasswordHash = "AQAAAAIAAYagAAAAEEwEy3NssAli+e99eP8D6/4QRoVGxNYNVOn/sJ8RRW4PQRNo8w4sS4AxHg9RvKZCNw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "49572596-007a-47c5-a041-63a97c2a7731",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.pl"
                        },
                        new
                        {
                            Id = "e6c9e8da-d179-4e75-bd2e-07f1c6353d98",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b24a44a8-aa17-4a63-8a07-437defe8eb88",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "manager@manager.pl",
                            EmailConfirmed = true,
                            Imie = "Janina",
                            LockoutEnabled = false,
                            Nazwisko = "Kowalska",
                            NormalizedEmail = "MANAGER@MANAGER.PL",
                            NormalizedUserName = "MANAGER@MANAGER.PL",
                            PasswordHash = "AQAAAAIAAYagAAAAEA4JX1xKIBJOw619dralm29R5FbD47MdLsRD70Qj6KWXS4xdHinyWqlq/DeDmJFYqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e6fdeac4-f058-4530-b43b-fea1c5b6817d",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "manager@manager.pl"
                        },
                        new
                        {
                            Id = "7c985a76-a1f6-426c-8f11-d6cc989aa9ce",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "dd973b33-a50f-4d55-a05a-b29537448032",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_0@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_0",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_0",
                            NormalizedEmail = "IMIENAZWISKO_0@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_0@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEBp2HfWa+hwGrzG9K01FuCPw5wqH+Dn53cqoLWP18wriNmgpfuwUUuWDubft1pdtig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "611020ac-5fee-40a2-9334-a4ab3c3fa152",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_0@gmail.com"
                        },
                        new
                        {
                            Id = "eddf7e57-6773-4cc4-888c-fff20f782fcb",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a44a778f-5ed1-462d-89b9-ac3ee45909fc",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_1@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_1",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_1",
                            NormalizedEmail = "IMIENAZWISKO_1@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_1@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAQfbMX4OkAxQ2U7n1rY8YUxRSYDnSUc881lRJCI+VMKMWHdvYyrMvDM3e6hplAdVg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "79043146-cb10-4dc4-9734-ea68c747e960",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_1@gmail.com"
                        },
                        new
                        {
                            Id = "6f9980e0-3645-4965-a237-8c9b5e3824bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9b5d9e04-1f56-48b4-93bd-f70f190bffb0",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_2@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_2",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_2",
                            NormalizedEmail = "IMIENAZWISKO_2@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_2@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENzG+nKGfDSu305KO850D3D7tFTUAi+wI76/XU5ns1i18sCtQA26PTJ9o6Y/zCjCDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b0a6ef6-283c-4910-a006-e6d23fd43799",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_2@gmail.com"
                        },
                        new
                        {
                            Id = "fb933f31-9716-4d3f-a6e4-15206253145e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3282f16-1cce-4359-a30f-2f1aede6c0d7",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_3@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_3",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_3",
                            NormalizedEmail = "IMIENAZWISKO_3@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_3@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOHEldUXPlJpDY/jkB33p5Ws1VETaSs8BXUDwtQBnZJDZSPapvnk4aV/z68Y+jW8/Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d5cea101-cbea-46ef-b7c8-7d16bd73fa39",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_3@gmail.com"
                        },
                        new
                        {
                            Id = "c59a8c3b-f99f-4e57-a166-7a953a02b62f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "37908c09-c6fe-4d8a-a904-2bc4328c5323",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_4@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_4",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_4",
                            NormalizedEmail = "IMIENAZWISKO_4@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_4@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAELnUtYlZKluTJf4Aa2Q7/ylLkgO82J6cP3yG88FhGSoSpJu6yV1GVljWy/WG2FXGCg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5fb5cfb9-ac17-41bd-bda3-4b2430ec2000",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_4@gmail.com"
                        },
                        new
                        {
                            Id = "726206e3-e379-4f35-b454-4c78b9ab0450",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "27f7d941-db05-4938-93fa-cf72ac9432fd",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_5@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_5",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_5",
                            NormalizedEmail = "IMIENAZWISKO_5@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_5@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEHQtsGCw7QUy/h2/BLPnVNF0CMyWNDlJ2AcYMMGKMdyAzW/eNSN2qOOtn+seD5zIHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "29da015d-7208-4558-83a4-a2419caefba8",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_5@gmail.com"
                        },
                        new
                        {
                            Id = "2cb6fc90-12a2-49b1-aeee-712161095eea",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "986648da-a913-4bed-9163-5333bd62bcc3",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_6@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_6",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_6",
                            NormalizedEmail = "IMIENAZWISKO_6@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_6@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECIND+sWdHKN5JrLWqGXB7aUTlx3sbkbcxJ1QhORoOcBiW8b5VhZ4xLpHuUHlZYe9g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b85f0aed-8bf0-4465-81de-8ccca5935664",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_6@gmail.com"
                        },
                        new
                        {
                            Id = "123f9c8a-4496-4e1b-9dcb-ca5c3cc80f75",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "520ae055-028f-4838-8b4b-37f6007f29e0",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_7@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_7",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_7",
                            NormalizedEmail = "IMIENAZWISKO_7@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_7@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJK78Z6r3y90/cPdxkaCjwkQIWU47qYAsk4sdTD1SlZmP7DLuEuOLXVWh8ZBeJKxqg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "07b2ce29-5cf7-445e-8ffc-16d5be5dccf3",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_7@gmail.com"
                        },
                        new
                        {
                            Id = "98258545-9700-4ee8-83e3-f020f586bac0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4230e3d8-86a8-43fe-b704-40ea1e47f45d",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_8@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_8",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_8",
                            NormalizedEmail = "IMIENAZWISKO_8@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_8@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAENIuFT4SabXrzZ6tTzWh7A3zO/jb67FgFmRQn+VDWOM5E4Vs0TFzcwR71z4nkIYtag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "191f9971-8808-466f-95b8-3ad8c7a2e19c",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_8@gmail.com"
                        },
                        new
                        {
                            Id = "67965e5f-8df1-4711-93a6-fb6d1dbdf7de",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b1c48a39-7583-486c-8643-bc84902743ce",
                            DataUrodzenia = "22.10.1998 12:12:12",
                            Email = "ImieNazwisko_9@gmail.com",
                            EmailConfirmed = true,
                            Imie = "Imie_9",
                            LockoutEnabled = false,
                            Nazwisko = "Nazwisko_9",
                            NormalizedEmail = "IMIENAZWISKO_9@GMAIL.COM",
                            NormalizedUserName = "IMIENAZWISKO_9@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED7o2rIBOyRwWJ3Am7DASuTFzObp+0iNWvotOxL52NO9WJAxylJe7cZpBugoTgyghA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "72cdf20f-dd3b-41cd-97a3-43abf1186c39",
                            TenantKind = 0,
                            TwoFactorEnabled = false,
                            UserName = "ImieNazwisko_9@gmail.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.DzienWylotu", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Flight", "Flight")
                        .WithMany("DniWylotu")
                        .HasForeignKey("FlightId");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", "Tenant")
                        .WithMany("Flights")
                        .HasForeignKey("TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Flight", "Flight")
                        .WithMany("FlightBuys")
                        .HasForeignKey("FlightId");

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.Tenant", "Tenant")
                        .WithMany("FlightBuys")
                        .HasForeignKey("TenantId");

                    b.Navigation("Flight");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuyKryteriaZnizki", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.FlightBuy", "FlightBuy")
                        .WithMany("FlightBuysKryteriaZnizkis")
                        .HasForeignKey("FlightBuyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", "KryteriaZnizki")
                        .WithMany("FlightBuysKryteriaZnizkis")
                        .HasForeignKey("KryteriaZnizkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightBuy");

                    b.Navigation("KryteriaZnizki");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.HasOne("SystemRezerwacjiLotow.Domain.Models.FlightBuy", "FlightBuy")
                        .WithMany()
                        .HasForeignKey("FlightBuyId");

                    b.Navigation("FlightBuy");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Flight", b =>
                {
                    b.Navigation("DniWylotu");

                    b.Navigation("FlightBuys");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.FlightBuy", b =>
                {
                    b.Navigation("FlightBuysKryteriaZnizkis");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.KryteriaZnizki", b =>
                {
                    b.Navigation("FlightBuysKryteriaZnizkis");
                });

            modelBuilder.Entity("SystemRezerwacjiLotow.Domain.Models.Tenant", b =>
                {
                    b.Navigation("FlightBuys");

                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
